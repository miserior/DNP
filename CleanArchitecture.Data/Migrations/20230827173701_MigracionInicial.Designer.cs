// <auto-generated />
using CleanArchitecture.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CleanArchitecture.Data.Migrations
{
    [DbContext(typeof(ModelDbContext))]
    [Migration("20230827173701_MigracionInicial")]
    partial class MigracionInicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CleanArchitecture.Domain.PreguntaFrecuente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DescripcionPregunta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescripcionRespuesta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TemaPreguntaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TemaPreguntaId");

                    b.ToTable("PreguntasFrecuentes");
                });

            modelBuilder.Entity("CleanArchitecture.Domain.TemaPregunta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DescripcionTema")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TemasPreguntas");
                });

            modelBuilder.Entity("CleanArchitecture.Domain.PreguntaFrecuente", b =>
                {
                    b.HasOne("CleanArchitecture.Domain.TemaPregunta", "TemaPregunta")
                        .WithMany()
                        .HasForeignKey("TemaPreguntaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TemaPregunta");
                });
#pragma warning restore 612, 618
        }
    }
}
